<?xml version="1.0"?>
<project name="pojobuilder" default="main" basedir=".">

	<!-- Properties -->
	<property file="build.local.properties" />
	<property file="version.properties" />
	<property file="${build.system.properties.file}" />
	<property name="version" value="devel" />

	<property name="project.title" value="pojobuilder" />
	<property name="project.Title" value="PojoBuilder" />
	<property name="project.description" value="pojobuilder" />
	<property name="project.version" value="${version}" />
	<property name="project.homepage" value="https://github.com/mkarneim/pojobuilder" />
	<property name="project.author" value="Michael Karneim" />
	<property name="annotation.processor.classname" value="net.karneim.pojobuilder.AnnotationProcessor" />


	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="false" />
	<property name="compile.optimize" value="true" />

	<!-- Libraries -->
	<property name="lib.dir" location="${basedir}/lib" />

	<!-- Folders and files -->
	<property name="src.dir" location="${basedir}/src" />
	<property name="src.main.java.dir" location="${src.dir}/main/java" />
	<property name="src.main.resources.dir" location="${src.dir}/main/resources" />
	<property name="src.main.templates.dir" location="${src.dir}/main/templates" />
	<property name="src.test.java.dir" location="${src.dir}/test/java" />

	<property name="build.dir" location="${basedir}/build" />
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="build.dist.dir" location="${build.dir}/dist" />
	<property name="build.meta-inf.dir" location="${build.dir}/META-INF" />
	<property name="dist.dir" location="${basedir}/dist" />


	<property name="dist.zip.name" value="${project.title}-${project.version}.zip" />
	<property name="full.jar.name" value="${project.title}-${project.version}.jar" />
	<property name="annotation.jar.name" value="${project.title}-annotation-${project.version}.jar" />


	<!--
	###################################################################
	##################    Filesets and Classpaths   ################### -->
	<fileset id="stringtemplate.libs.fileset" dir="${lib.dir}">
		<include name="stringtemplate/*.jar" />
	</fileset>
	<fileset id="junit.libs.fileset" dir="${lib.dir}">
		<include name="junit/*.jar" />
	</fileset>

	<fileset id="full.classes.fileset" dir="${build.classes.dir}" description="Compiled classes without tests.">
		<exclude name="**/*Test.class" />
	</fileset>
	<fileset id="annotation.classes.fileset" dir="${build.classes.dir}" description="Annotation classes">
		<include name="**/GeneratePojoBuilder.class" />
		<include name="**/PropertyNames.class" />
	</fileset>		

	<path id="class.path">
		<pathelement path="${currentenv.classpath}" />
		<fileset refid="stringtemplate.libs.fileset" />
		<fileset refid="junit.libs.fileset" />
	</path>

	<!--
	###################################################################
	####################         Targets           #################### -->
	<target name="init">
		<tstamp>
			<format property="build.time" pattern="MMM/dd/yyyy hh:mm aa z" />
		</tstamp>
	</target>

	<target name="clean" depends="init" description="Clean up all generated files.">
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
	</target>

	<target name="compile" depends="init" description="Compile java sources.">
		<mkdir dir="${build.classes.dir}" />
		<javac classpathref="class.path" destdir="${build.classes.dir}" source="1.6" target="1.6" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<src path="${src.main.java.dir}" />
		</javac>
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.main.templates.dir}" />
		</copy>
	</target>

	<target name="create-classes-jar" depends="init, compile" description="Create jar with all classes without tests">
		<pathconvert pathsep=" " dirsep="/" property="manifest.classpath">
			<path>
				<fileset refid="stringtemplate.libs.fileset" />
			</path>
			<flattenmapper />
		</pathconvert>
		<jar destfile="${build.dir}/${full.jar.name}">
			<fileset refid="full.classes.fileset" />
			<fileset dir="${src.main.resources.dir}" />
			<fileset dir="${build.dir}" includes="META-INF/**" />
			<service type="javax.annotation.processing.Processor" provider="${annotation.processor.classname}" />
			<manifest>
				<attribute name="Build-Date" value="${build.time}" />
				<attribute name="Author" value="${project.author}" />
				<attribute name="Implementation-Title" value="${project.Title}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="Implementation-Vendor" value="${project.homepage}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
			</manifest>
		</jar>
	</target>

	<target name="create-annotations-jar" depends="init, compile" description="Create jar with all annotations">		
		<jar destfile="${build.dir}/${annotation.jar.name}">
			<fileset refid="annotation.classes.fileset"/>
			<fileset dir="${src.main.resources.dir}" />
			<fileset dir="${build.dir}" includes="META-INF/**" />			
			<manifest>
				<attribute name="Build-Date" value="${build.time}" />
				<attribute name="Author" value="${project.author}" />
				<attribute name="Implementation-Title" value="${project.Title}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="Implementation-Vendor" value="${project.homepage}" />				
			</manifest>
		</jar>
	</target>

	<target name="dist" depends="init, clean, create-classes-jar, create-annotations-jar">
		<mkdir dir="${build.dist.dir}" />
		<copy todir="${build.dist.dir}" flatten="true">
			<fileset dir="${build.dir}" includes="${full.jar.name}" />
			<fileset dir="${build.dir}" includes="${annotation.jar.name}" />
			<fileset refid="stringtemplate.libs.fileset" />
			<fileset dir="${basedir}" includes="COPYING, README*" />
		</copy>
		<mkdir dir="${dist.dir}" />
		<zip destfile="${dist.dir}/${dist.zip.name}" compress="true" filesonly="true">
			<fileset dir="${build.dist.dir}" />
		</zip>
	</target>

	<target name="build-samples" depends="init, dist" description="Builds the sample project">
		<ant dir="samples" inheritAll="false">
			<property name="lib.dir" location="${build.dist.dir}" />
		</ant>
	</target>


	<target name="main" depends="init, clean, dist, build-samples" description="Builds all project artifacts">
	</target>
</project>
